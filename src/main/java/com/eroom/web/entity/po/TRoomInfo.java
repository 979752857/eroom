package com.eroom.web.entity.po;
// Generated 2017-5-24 16:38:21 by Hibernate Tools 5.2.1.Final

import javax.persistence.*;
import java.util.Date;

/**
 * TRoomInfo generated by hbm2java
 */
@Entity
@Table(name = "t_room_info", catalog = "eroom")
public class TRoomInfo implements java.io.Serializable {
    private long roomId;
    private String name;
    private String roomType;
    private String floor;
    private String imageUrl;
    private String environment;
    private String year;
    private String buildType;
    private String heating;
    private String greening;
    private String config;
    private String state;
    private Date updateTime;
    private Date createTime;
    private String aroundInfo;
    private String traffice;
    private String remark;

    @Id
    @Column(name = "room_id")
    public long getRoomId() {
        return roomId;
    }

    public void setRoomId(long roomId) {
        this.roomId = roomId;
    }

    @Basic
    @Column(name = "name")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Basic
    @Column(name = "room_type")
    public String getRoomType() {
        return roomType;
    }

    public void setRoomType(String roomType) {
        this.roomType = roomType;
    }

    @Basic
    @Column(name = "floor")
    public String getFloor() {
        return floor;
    }

    public void setFloor(String floor) {
        this.floor = floor;
    }

    @Basic
    @Column(name = "image_url")
    public String getImageUrl() {
        return imageUrl;
    }

    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    @Basic
    @Column(name = "environment")
    public String getEnvironment() {
        return environment;
    }

    public void setEnvironment(String environment) {
        this.environment = environment;
    }

    @Basic
    @Column(name = "year")
    public String getYear() {
        return year;
    }

    public void setYear(String year) {
        this.year = year;
    }

    @Basic
    @Column(name = "build_type")
    public String getBuildType() {
        return buildType;
    }

    public void setBuildType(String buildType) {
        this.buildType = buildType;
    }

    @Basic
    @Column(name = "heating")
    public String getHeating() {
        return heating;
    }

    public void setHeating(String heating) {
        this.heating = heating;
    }

    @Basic
    @Column(name = "greening")
    public String getGreening() {
        return greening;
    }

    public void setGreening(String greening) {
        this.greening = greening;
    }

    @Basic
    @Column(name = "config")
    public String getConfig() {
        return config;
    }

    public void setConfig(String config) {
        this.config = config;
    }

    @Basic
    @Column(name = "state")
    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Basic
    @Column(name = "update_time")
    public Date getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    @Basic
    @Column(name = "create_time")
    public Date getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    @Basic
    @Column(name = "around_info")
    public String getAroundInfo() {
        return aroundInfo;
    }

    public void setAroundInfo(String aroundInfo) {
        this.aroundInfo = aroundInfo;
    }

    @Basic
    @Column(name = "traffice")
    public String getTraffice() {
        return traffice;
    }

    public void setTraffice(String traffice) {
        this.traffice = traffice;
    }

    @Basic
    @Column(name = "remark")
    public String getRemark() {
        return remark;
    }

    public void setRemark(String remark) {
        this.remark = remark;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        TRoomInfo that = (TRoomInfo) o;

        if (roomId != that.roomId) return false;
        if (name != null ? !name.equals(that.name) : that.name != null) return false;
        if (roomType != null ? !roomType.equals(that.roomType) : that.roomType != null) return false;
        if (floor != null ? !floor.equals(that.floor) : that.floor != null) return false;
        if (imageUrl != null ? !imageUrl.equals(that.imageUrl) : that.imageUrl != null) return false;
        if (environment != null ? !environment.equals(that.environment) : that.environment != null) return false;
        if (year != null ? !year.equals(that.year) : that.year != null) return false;
        if (buildType != null ? !buildType.equals(that.buildType) : that.buildType != null) return false;
        if (heating != null ? !heating.equals(that.heating) : that.heating != null) return false;
        if (greening != null ? !greening.equals(that.greening) : that.greening != null) return false;
        if (config != null ? !config.equals(that.config) : that.config != null) return false;
        if (state != null ? !state.equals(that.state) : that.state != null) return false;
        if (updateTime != null ? !updateTime.equals(that.updateTime) : that.updateTime != null) return false;
        if (createTime != null ? !createTime.equals(that.createTime) : that.createTime != null) return false;
        if (aroundInfo != null ? !aroundInfo.equals(that.aroundInfo) : that.aroundInfo != null) return false;
        if (traffice != null ? !traffice.equals(that.traffice) : that.traffice != null) return false;
        if (remark != null ? !remark.equals(that.remark) : that.remark != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = (int) (roomId ^ (roomId >>> 32));
        result = 31 * result + (name != null ? name.hashCode() : 0);
        result = 31 * result + (roomType != null ? roomType.hashCode() : 0);
        result = 31 * result + (floor != null ? floor.hashCode() : 0);
        result = 31 * result + (imageUrl != null ? imageUrl.hashCode() : 0);
        result = 31 * result + (environment != null ? environment.hashCode() : 0);
        result = 31 * result + (year != null ? year.hashCode() : 0);
        result = 31 * result + (buildType != null ? buildType.hashCode() : 0);
        result = 31 * result + (heating != null ? heating.hashCode() : 0);
        result = 31 * result + (greening != null ? greening.hashCode() : 0);
        result = 31 * result + (config != null ? config.hashCode() : 0);
        result = 31 * result + (state != null ? state.hashCode() : 0);
        result = 31 * result + (updateTime != null ? updateTime.hashCode() : 0);
        result = 31 * result + (createTime != null ? createTime.hashCode() : 0);
        result = 31 * result + (aroundInfo != null ? aroundInfo.hashCode() : 0);
        result = 31 * result + (traffice != null ? traffice.hashCode() : 0);
        result = 31 * result + (remark != null ? remark.hashCode() : 0);
        return result;
    }
}
